# -*- mode: org; coding: utf-8 -*-
#+TITLE: 计算机系统 核心概念及软硬件实现
#+STARTUP: overview
* 提出问题
- 全书讲了什么
- 全书是如何组织的
- 这本书和我有什么关系
* 书籍的简单摘要
本书基于一个简单的机器pep8,从上而下讲解了计算机的各个层级.
* 结构
** App7 层(应用层)
论述一些软件的使用,可以跳过
** HOL6 层(高级语言层)
以C++为例子论述高级语言的一些性质,具体的
*** 变量
- 论述了C++编译器执行的基本功能
- C++的内存模型
- 全局变量和赋值语句
*** 控制流
*** 函数
*** 递归
*** 动态内存分配
** ISA3 层(指令集架构层)
*** 信息的表示
描述了计算机中数据是如何保存的以及数据之间是如何进行运算的.计算机如何表示浮点数这部分内容很不错.
*** 计算机体系结构
**** 4.1和4.2
主要表述pep8的体系结构,比较详细,看的时候只要把握大概就好了.在做习题的时候会加深理解的.
**** 4.3 冯诺伊曼机器
讲述了冯诺伊曼机器的执行步骤,具体如下:
加载机器语言程序
初始化PC和SP
do{
	取下一条指令
    指令指示符解码
    递增PC
    执行取出的指令
} while (没有执行停止指令)
**** 4.4 ISA3 层编程
描述了怎么样使用机器码给 pep8 编程 可以跳过,之后在 Asmb5 层进行编程
** Asmb5 层(汇编层)
*** 汇编语言
汇编层即是对ISA3层次的抽象.隐藏了ISA3层的细节.
汇编语言的语句可以分成两种类型助记符语句(指令),伪操作(即点命令,汇编器指示字,数据)
汇编语言消除了程序中需要手工确定数据和指令地址的问题(这个是最痛苦的)
高级语言层的变量对应与汇编层的内存地址, 在汇编层唯一的类型是位,某种意义上算是完全的动态类型
*** 编译到汇编层
*** 语言翻译原理
** OS4 层(操作系统层)
** LG1 层(逻辑门层)
** Mc2 层(微代码层)
* 习题集
* 阅读的目的
理解计算机的工作原理,使自己能够写出更好的代码
* 吐槽
在网上下的pep8的模拟软件在archlinux上不知道为什么完全不能用,只好把源代码下载下来,自己编译了,貌似因为写的时候比较早,必须修改头文件才能通过clang++的编译.
书籍的图有很多地方都有点问题.比如pep8的结构图,看来以后还是尽量多看英文书吧.
有些地方重复的在讲,感觉废话有点多.
