#+TITLE: Introduction to Algorithms 3th
#+STARTUP: overview
* 提出问题
- 全书讲了什么
- 全书是如何组织的
- 这本书和我有什么关系
* 阅读的目的
学习基本的算法为之后找到更好的工作打下基础,大概在3个月之内过一遍这本书,习题基本上每章的题都做一遍吧.
* 书籍的简单摘要
This book provides a comprehensive introduction to the modern study of computer algorithms
* 结构
** Fundations
*** Introduction
The fundation of algorithms
*** The Role of Algorithms in Computing
overview of algorithms and their place in modern computing systems
An =Algorithms= is any well-defined computational procedure that takes some value, or set of values, as input and produces some value, or set of values, as output. In other words, An algorithms is thus a sequence of computational steps that transform the input into output.
An =Algorithms= is correct if, for every input instance, it halts with the correct output.
*** Getting Started
**** insertion sort
#+BEGIN_SRC c
#+END_SRC

#+BEGIN_SRC cpp
#+END_SRC

#+BEGIN_SRC python :results output
  def sort(a: [int]) -> [int]:
      for j in range(1,len(a)):
          key = a[j]
          i = j - 1
          while i >= 0 and a[i] > key:
              a[i + 1] = a[i]
              i = i - 1
          a[i + 1] = key
      return a


  print(sort([1, 0, 4, 5, 2231, 312, 3244]))
#+END_SRC

use loop invariant to show why an algorithms is correct, the same as mathematical induction
- Initialization
  It is true prior to the first iteration of the loop
- Maintenance
  If it is true before an iteration of the loop, it remains true before the next iteration
- Termination
  When the loop terminates, the invariant gives us a useful property that helps show that the algorithm is correct
**** merge sort
devide-and-conquer approach
- =Divide= the problem into a number of subproblems that are smaller instances of the same problem
- =Conquer= the subproblems by solving them recursively
- =Combine= the solutions to the subproblems into the solution for the original problem
*** Growth of Functions
precisely defines asymptotic notation
*** Divide-and-Conquer
Delve into divide-and-conquer method.
*** Probabilistic Analysis and Randomized Algorithms
Introduce probailistic analysis and randomized algorithms
** Sorting and Order Statistics
** Data Structures
** Advanced Design and Analysis Techniques
** Advanced Data Structures
** Graph Algorithms
** Selected Topics
** Appendix
* 习题集
* 吐槽
